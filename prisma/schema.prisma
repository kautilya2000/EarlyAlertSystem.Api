// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "sqlserver"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Student {
  ksuId            String         @id
  firstName        String
  lastName         String
  email            String         @unique
  phoneNumber      String         @unique
  homeDepartment   String
  major            String?
  gpa              String?
  cohort           String?
  academicStanding String?
  createdDate      DateTime       @default(now())
  updatedDate      DateTime       @updatedAt
  isDeleted        Boolean        @default(false)
  Grade            Grade[]
  SupportEvent     SupportEvent[]
  Alert            Alert[]
}

model Instructor {
  instructorId String   @id
  name         String
  email        String   @unique
  Course       Course[]
}

model Course {
  courseId          String     @id
  courseName        String
  courseNumber      Int
  courseSubjectCode String     @unique
  creditHours       Int
  instructor        Instructor @relation(fields: [instructorId], references: [instructorId])
  instructorId      String
  createdDate       DateTime   @default(now())
  updatedDate       DateTime   @updatedAt
  isDeleted         Boolean    @default(false)
  Grade             Grade[]
  Alert             Alert[]
}

model Grade {
  gradeId           Int      @id @default(autoincrement())
  gradeValue        String
  student           Student  @relation(fields: [ksuId], references: [ksuId])
  ksuId             String
  course            Course   @relation(fields: [courseId], references: [courseId])
  courseId          String
  semesterCode      String
  crn               String
  instructionMethod String
  repeatIndicator   String
  createdDate       DateTime @default(now())
  updatedDate       DateTime @updatedAt
  isDeleted         Boolean  @default(false)
}

model Support {
  supportId    Int            @id @default(autoincrement())
  unit         String
  type         String
  createdDate  DateTime       @default(now())
  updatedDate  DateTime       @updatedAt
  isDeleted    Boolean        @default(false)
  SupportEvent SupportEvent[]
  Alert        Alert[]
}

model SupportEvent {
  eventId     Int      @id @default(autoincrement())
  support     Support  @relation(fields: [supportId], references: [supportId])
  supportId   Int
  student     Student  @relation(fields: [ksuId], references: [ksuId])
  ksuId       String
  date        DateTime
  type        String
  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt
  isDeleted   Boolean  @default(false)
}

model Alert {
  alertId          Int      @id @default(autoincrement())
  student          Student  @relation(fields: [ksuId], references: [ksuId])
  ksuId            String
  course           Course   @relation(fields: [courseId], references: [courseId])
  courseId         String
  support          Support  @relation(fields: [supportSupportId], references: [supportId])
  supportSupportId Int
  createdDate      DateTime @default(now())
  updatedDate      DateTime @updatedAt
  isDeleted        Boolean  @default(false)
}

model RiskStudentDetails {
  riskStudentDetailsId Int                @id @default(autoincrement())
  facultyName          String
  facultyEmail         String
  courseNumber         String
  courseCrn            String
  studentName          String
  studentId            String
  studentNetId         String
  createdDate          DateTime           @default(now())
  updatedDate          DateTime           @updatedAt
  isDeleted            Boolean            @default(false)
  FactorsConcerned     FactorsConcerned[]
  notes                String
  isGraduateStudent    Boolean
  sendEmail            Boolean
}

model FactorsConcerned {
  factorsConcernedId   Int                 @id @default(autoincrement())
  factorConcerned      String
  createdDate          DateTime            @default(now())
  updatedDate          DateTime            @updatedAt
  isDeleted            Boolean             @default(false)
  riskStudentDetailsId Int?
  RiskStudentDetails   RiskStudentDetails? @relation(fields: [riskStudentDetailsId], references: [riskStudentDetailsId])

  @@index([riskStudentDetailsId])
}
